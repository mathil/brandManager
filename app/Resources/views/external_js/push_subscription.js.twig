function urlB64ToUint8Array(base64String) {
    const padding = '='.repeat((4 - base64String.length % 4) % 4);
    const base64 = (base64String + padding)
        .replace(/\-/g, '+')
        .replace(/_/g, '/');

    const rawData = window.atob(base64);
    const outputArray = new Uint8Array(rawData.length);

    for (let i = 0; i < rawData.length; ++i) {
        outputArray[i] = rawData.charCodeAt(i);
    }
    return outputArray;
}

$(document).ready(function () {
    const applicationServerPublicKey = '{{ clientPublicKey }}';
    var swRegistration;
    if ('serviceWorker' in navigator && 'PushManager' in window) {
        navigator.serviceWorker.register('sw.js')
            .then(function (swReg) {
                swRegistration = swReg;
                subscribeUser();
            })
            .catch(function (error) {
                console.error('Service Worker Error', error);
            });
    } else {
        console.warn('Push messaging is not supported');
    }

    function subscribeUser() {
        const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);
        swRegistration.pushManager.subscribe({
            userVisibleOnly: true,
            applicationServerKey: applicationServerKey
        })
            .then(function (subscription) {
                sendSubscriptionToServer(JSON.stringify(subscription));
                //TO DO wysÅ‚anie notyfikacji
            })
            .catch(function (err) {
                console.log('Failed to subscribe the user: ', err);
            });
    }

    function sendSubscriptionToServer(subscription) {
        console.log(subscription);
        $.ajax({
            url: 'http://127.0.0.1/brandManager/web/app_dev.php/api/pushsubscription/save',
            type: 'POST',
            data: {subscription: subscription, publicKey: applicationServerPublicKey},
            success: function (data, textStatus, jqXHR) {
                console.log(data);
            },
            error: function (data) {
                console.log(data);
            }
        });
    }
});